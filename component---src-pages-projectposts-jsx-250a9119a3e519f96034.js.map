{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/readOnlyError.js","webpack:///./src/components/project-posts/index.jsx","webpack:///./src/pages/projectposts.jsx","webpack:///./src/components/section/index.jsx","webpack:///./src/components/summary-item/index.jsx","webpack:///./src/pages/404.jsx"],"names":["_readOnlyError","name","Error","ProjectPosts","posts","title","map","post","key","node","fields","slug","frontmatter","description","link","internal","pageQuery","Index","data","projmd","edges","blogposts","blogmd","noProjs","length","noBlogs","metadata","site","siteMetadata","classes","Section","children","className","SummaryItem","linkContent","to","href","NotFoundPage"],"mappings":"+FAAe,SAASA,EAAeC,GACrC,MAAM,IAAIC,MAAM,IAAOD,EAAO,kB,kGCoBjBE,EAhBM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,kBAAC,IAAD,CAASC,MAAM,qBACZD,EAAME,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACEC,IAAKD,EAAKE,KAAKC,OAAOC,KACtBV,KAAMM,EAAKE,KAAKG,YAAYP,MAC5BQ,YAAaN,EAAKE,KAAKG,YAAYC,YACnCC,KAAMP,EAAKE,KAAKC,OAAOC,KACvBI,UAAQ,S,gDCgBLC,GAFEC,UAnBD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACTd,EAAQc,EAAKC,OAAOC,MACpBC,EAAYH,EAAKI,OAAOF,MACxBG,GAAWnB,IAAUA,EAAMoB,OAC3BC,GAAWJ,IAAcA,EAAUG,OAEzC,OAAKpB,GAAUA,EAAMoB,OAKnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKnB,MAAM,kBACX,kBAAC,IAAD,CAAQqB,UAAUR,EAAKS,KAAKC,aAAqB,aAAPH,EAAQA,MAChDF,GAAW,kBAAC,EAAD,CAAWnB,MAAOA,KAP1B,kBAAC,UAAD,OAcW,c,kCC9BtB,yBAEMyB,EACK,sBADLA,EAEG,qCAFHA,EAIF,oFAJEA,EAKK,gEAcIC,IAXC,SAAC,GAAyB,IAAvBzB,EAAsB,EAAtBA,MAAO0B,EAAe,EAAfA,SACxB,OACE,yBAAKC,UAAWH,GACd,yBAAKG,UAAWH,GACd,wBAAIG,UAAWH,GAAkBxB,IAEnC,yBAAK2B,UAAWH,GAAkBE,M,kCChBxC,qCAGMF,EACK,OADLA,EAEE,mCAFFA,EAGS,mCAyBAI,IAtBK,SAAC,GAA2D,IAC1EC,EADiBjC,EAAwD,EAAxDA,KAAMY,EAAkD,EAAlDA,YAAkD,IAArCC,YAAqC,aAAvBC,SAQtD,OALEmB,OAH2E,SAG7D,kBAAC,OAAD,CAAMC,GAAIrB,GAAOb,GAEjB,uBAAGmC,KAAMtB,GAAOb,GAI9B,yBAAK+B,UAAWH,GACd,wBACEG,UAAcH,EAAL,KACPf,EAAO,mCAAqC,KAG7CA,EAAOoB,EAAcjC,GAExB,uBAAG+B,UAAWH,GAAsBhB,M,kCC1B1C,oEAMMgB,EACG,oBADHA,EAEE,YAiBOQ,UAdM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKhC,MAAM,cACX,wBAAI2B,UAAWH,GAAf,kBACA,sEAC2C,IACzC,kBAAC,OAAD,CAAMG,UAAWH,EAAcM,GAAG,KAAlC,oBAFF","file":"component---src-pages-projectposts-jsx-250a9119a3e519f96034.js","sourcesContent":["export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst ProjectPosts = ({ posts }) => {\n  return (\n    <Section title=\"All Project Posts\">\n      {posts.map((post) => (\n        <SummaryItem\n          key={post.node.fields.slug}\n          name={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          link={post.node.fields.slug}\n          internal\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default ProjectPosts;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport ProjPosts from '../components/project-posts';\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport NotFound from '../pages/404';\n\nconst Index = ({ data }) => {\n  const posts = data.projmd.edges;\n  const blogposts = data.blogmd.edges;\n  const noProjs = !posts || !posts.length;\n  const noBlogs = !blogposts || !blogposts.length;\n\n  if (!posts || !posts.length) {\n    return <NotFound />;\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Project Posts\" />\n      <Header metadata={data.site.siteMetadata, noBlogs=noBlogs} />\n      {!noProjs && <ProjPosts posts={posts} />}\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        github\n        linkedin\n      }\n    }\n    blogmd: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n      filter: {fileAbsolutePath: {regex: \"/content/blog/\"  }}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n    projmd: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n      filter: {fileAbsolutePath: {regex: \"/projectposts/\"  }}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nconst classes = {\n  wrapper: 'block pt-12 md:flex',\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\n  heading:\n    'font-xs font-light tracking-widest text-sm text-gray-600 leading-normal uppercase',\n  content: 'flex-none text-lg text-gray-600 font-light md:flex-1 md:pl-20',\n};\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.title}>\n        <h2 className={classes.heading}>{title}</h2>\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  wrapper: 'mb-6',\n  name: 'font-semibold text-gray-900 pb-1',\n  description: 'text-md text-gray-600 font-light',\n};\n\nconst SummaryItem = ({ name, description, link = false, internal = false }) => {\n  let linkContent;\n  if (internal) {\n    linkContent = <Link to={link}>{name}</Link>;\n  } else {\n    linkContent = <a href={link}>{name}</a>;\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <h3\n        className={`${classes.name} ${\n          link ? 'hover:underline hover:text-black' : ''\n        }`}\n      >\n        {link ? linkContent : name}\n      </h3>\n      <p className={classes.description}>{description}</p>\n    </div>\n  );\n};\n\nexport default SummaryItem;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst classes = {\n  title: 'text-lg font-bold',\n  link: 'underline',\n};\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not found\" />\n    <h1 className={classes.title}>404: Not Found</h1>\n    <p>\n      You just hit a route that doesn't exist.{' '}\n      <Link className={classes.link} to=\"/\">\n        Return to safety\n      </Link>\n      .\n    </p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"sourceRoot":""}